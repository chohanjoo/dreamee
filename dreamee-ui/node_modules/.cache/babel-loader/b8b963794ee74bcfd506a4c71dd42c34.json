{"ast":null,"code":"// Copyright (C) 1998-2020 by Northwoods Software Corporation. All Rights Reserved.\nimport { __extends } from 'tslib';\nimport { Diagram, GraphLinksModel, Overview, Spot } from 'gojs';\nimport { createRef, createElement, Component } from 'react';\n\nvar ReactDiagram = function (_super) {\n  __extends(ReactDiagram, _super);\n\n  function ReactDiagram(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.modelChangedListener = null;\n    _this.divRef = createRef();\n    return _this;\n  }\n\n  ReactDiagram.prototype.getDiagram = function () {\n    if (this.divRef.current === null) return null;\n    return Diagram.fromDiv(this.divRef.current);\n  };\n\n  ReactDiagram.prototype.componentDidMount = function () {\n    var _this = this;\n\n    if (this.divRef.current === null) return;\n    var diagram = this.props.initDiagram();\n    diagram.div = this.divRef.current;\n\n    this.modelChangedListener = function (e) {\n      if (e.isTransactionFinished) {\n        var dataChanges = e.model.toIncrementalData(e);\n        if (dataChanges !== null) _this.props.onModelChange(dataChanges);\n      }\n    };\n\n    diagram.addModelChangedListener(this.modelChangedListener);\n    diagram.delayInitialization(function () {\n      var model = diagram.model;\n      model.commit(function (m) {\n        m.mergeNodeDataArray(_this.props.nodeDataArray);\n\n        if (_this.props.linkDataArray !== undefined && m instanceof GraphLinksModel) {\n          m.mergeLinkDataArray(_this.props.linkDataArray);\n        }\n\n        if (_this.props.modelData !== undefined) {\n          m.assignAllDataProperties(m.modelData, _this.props.modelData);\n        }\n      }, 'gojs-react init merge');\n    });\n  };\n\n  ReactDiagram.prototype.componentWillUnmount = function () {\n    var diagram = this.getDiagram();\n\n    if (diagram !== null) {\n      diagram.div = null;\n\n      if (this.modelChangedListener !== null) {\n        diagram.removeModelChangedListener(this.modelChangedListener);\n        this.modelChangedListener = null;\n      }\n    }\n  };\n\n  ReactDiagram.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    if (nextProps.skipsDiagramUpdate) return false;\n    if (nextProps.nodeDataArray === this.props.nodeDataArray && nextProps.linkDataArray === this.props.linkDataArray && nextProps.modelData === this.props.modelData) return false;\n    return true;\n  };\n\n  ReactDiagram.prototype.componentDidUpdate = function (prevProps, prevState) {\n    var diagram = this.getDiagram();\n\n    if (diagram !== null) {\n      var model = diagram.model;\n      model.startTransaction('update data');\n      model.mergeNodeDataArray(this.props.nodeDataArray);\n\n      if (this.props.linkDataArray !== undefined && model instanceof GraphLinksModel) {\n        model.mergeLinkDataArray(this.props.linkDataArray);\n      }\n\n      if (this.props.modelData !== undefined) {\n        model.assignAllDataProperties(model.modelData, this.props.modelData);\n      }\n\n      model.commitTransaction('update data');\n    }\n  };\n\n  ReactDiagram.prototype.render = function () {\n    return createElement(\"div\", {\n      ref: this.divRef,\n      className: this.props.divClassName\n    });\n  };\n\n  return ReactDiagram;\n}(Component);\n\nvar ReactOverview = function (_super) {\n  __extends(ReactOverview, _super);\n\n  function ReactOverview(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.divRef = createRef();\n    return _this;\n  }\n\n  ReactOverview.prototype.getOverview = function () {\n    if (this.divRef.current === null) return null;\n    return Diagram.fromDiv(this.divRef.current);\n  };\n\n  ReactOverview.prototype.componentDidMount = function () {\n    if (this.divRef.current === null) return;\n    var overview;\n\n    if (this.props.initOverview !== undefined) {\n      overview = this.props.initOverview();\n    } else {\n      overview = new Overview();\n      overview.contentAlignment = Spot.Center;\n    }\n\n    overview.div = this.divRef.current;\n    overview.observed = this.props.observedDiagram;\n  };\n\n  ReactOverview.prototype.componentWillUnmount = function () {\n    var overview = this.getOverview();\n\n    if (overview !== null) {\n      overview.div = null;\n      overview.observed = null;\n    }\n  };\n\n  ReactOverview.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    if (nextProps.observedDiagram === this.props.observedDiagram) return false;\n    return true;\n  };\n\n  ReactOverview.prototype.componentDidUpdate = function (prevProps, prevState) {\n    var overview = this.getOverview();\n\n    if (overview !== null) {\n      overview.observed = this.props.observedDiagram;\n    }\n  };\n\n  ReactOverview.prototype.render = function () {\n    return createElement(\"div\", {\n      ref: this.divRef,\n      className: this.props.divClassName\n    });\n  };\n\n  return ReactOverview;\n}(Component);\n\nvar ReactPalette = function (_super) {\n  __extends(ReactPalette, _super);\n\n  function ReactPalette(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.divRef = createRef();\n    return _this;\n  }\n\n  ReactPalette.prototype.getPalette = function () {\n    if (this.divRef.current === null) return null;\n    return Diagram.fromDiv(this.divRef.current);\n  };\n\n  ReactPalette.prototype.componentDidMount = function () {\n    var _this = this;\n\n    if (this.divRef.current === null) return;\n    var palette = this.props.initPalette();\n    palette.div = this.divRef.current;\n    palette.delayInitialization(function () {\n      var model = palette.model;\n      model.commit(function (m) {\n        m.mergeNodeDataArray(_this.props.nodeDataArray);\n\n        if (_this.props.linkDataArray !== undefined && m instanceof GraphLinksModel) {\n          m.mergeLinkDataArray(_this.props.linkDataArray);\n        }\n\n        if (_this.props.modelData !== undefined) {\n          m.assignAllDataProperties(m.modelData, _this.props.modelData);\n        }\n      }, null);\n    });\n  };\n\n  ReactPalette.prototype.componentWillUnmount = function () {\n    var palette = this.getPalette();\n\n    if (palette !== null) {\n      palette.div = null;\n    }\n  };\n\n  ReactPalette.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    if (nextProps.nodeDataArray === this.props.nodeDataArray && nextProps.linkDataArray === this.props.linkDataArray && nextProps.modelData === this.props.modelData) return false;\n    return true;\n  };\n\n  ReactPalette.prototype.componentDidUpdate = function (prevProps, prevState) {\n    var palette = this.getPalette();\n\n    if (palette !== null) {\n      var model = palette.model;\n      model.startTransaction('update data');\n      model.mergeNodeDataArray(this.props.nodeDataArray);\n\n      if (this.props.linkDataArray !== undefined && model instanceof GraphLinksModel) {\n        model.mergeLinkDataArray(this.props.linkDataArray);\n      }\n\n      if (this.props.modelData !== undefined) {\n        model.assignAllDataProperties(model.modelData, this.props.modelData);\n      }\n\n      model.commitTransaction('update data');\n    }\n  };\n\n  ReactPalette.prototype.render = function () {\n    return createElement(\"div\", {\n      ref: this.divRef,\n      className: this.props.divClassName\n    });\n  };\n\n  return ReactPalette;\n}(Component);\n\nexport { ReactDiagram, ReactOverview, ReactPalette };","map":{"version":3,"sources":["/Users/hj/dreamee-ui/node_modules/gojs-react/lib/esm/gojsreact.js"],"names":["__extends","Diagram","GraphLinksModel","Overview","Spot","createRef","createElement","Component","ReactDiagram","_super","props","_this","call","modelChangedListener","divRef","prototype","getDiagram","current","fromDiv","componentDidMount","diagram","initDiagram","div","e","isTransactionFinished","dataChanges","model","toIncrementalData","onModelChange","addModelChangedListener","delayInitialization","commit","m","mergeNodeDataArray","nodeDataArray","linkDataArray","undefined","mergeLinkDataArray","modelData","assignAllDataProperties","componentWillUnmount","removeModelChangedListener","shouldComponentUpdate","nextProps","nextState","skipsDiagramUpdate","componentDidUpdate","prevProps","prevState","startTransaction","commitTransaction","render","ref","className","divClassName","ReactOverview","getOverview","overview","initOverview","contentAlignment","Center","observed","observedDiagram","ReactPalette","getPalette","palette","initPalette"],"mappings":"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","sourcesContent":["// Copyright (C) 1998-2020 by Northwoods Software Corporation. All Rights Reserved.\nimport { __extends } from 'tslib';\nimport { Diagram, GraphLinksModel, Overview, Spot } from 'gojs';\nimport { createRef, createElement, Component } from 'react';\n\nvar ReactDiagram = (function (_super) {\r\n    __extends(ReactDiagram, _super);\r\n    function ReactDiagram(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.modelChangedListener = null;\r\n        _this.divRef = createRef();\r\n        return _this;\r\n    }\r\n    ReactDiagram.prototype.getDiagram = function () {\r\n        if (this.divRef.current === null)\r\n            return null;\r\n        return Diagram.fromDiv(this.divRef.current);\r\n    };\r\n    ReactDiagram.prototype.componentDidMount = function () {\r\n        var _this = this;\r\n        if (this.divRef.current === null)\r\n            return;\r\n        var diagram = this.props.initDiagram();\r\n        diagram.div = this.divRef.current;\r\n        this.modelChangedListener = function (e) {\r\n            if (e.isTransactionFinished) {\r\n                var dataChanges = e.model.toIncrementalData(e);\r\n                if (dataChanges !== null)\r\n                    _this.props.onModelChange(dataChanges);\r\n            }\r\n        };\r\n        diagram.addModelChangedListener(this.modelChangedListener);\r\n        diagram.delayInitialization(function () {\r\n            var model = diagram.model;\r\n            model.commit(function (m) {\r\n                m.mergeNodeDataArray(_this.props.nodeDataArray);\r\n                if (_this.props.linkDataArray !== undefined && m instanceof GraphLinksModel) {\r\n                    m.mergeLinkDataArray(_this.props.linkDataArray);\r\n                }\r\n                if (_this.props.modelData !== undefined) {\r\n                    m.assignAllDataProperties(m.modelData, _this.props.modelData);\r\n                }\r\n            }, 'gojs-react init merge');\r\n        });\r\n    };\r\n    ReactDiagram.prototype.componentWillUnmount = function () {\r\n        var diagram = this.getDiagram();\r\n        if (diagram !== null) {\r\n            diagram.div = null;\r\n            if (this.modelChangedListener !== null) {\r\n                diagram.removeModelChangedListener(this.modelChangedListener);\r\n                this.modelChangedListener = null;\r\n            }\r\n        }\r\n    };\r\n    ReactDiagram.prototype.shouldComponentUpdate = function (nextProps, nextState) {\r\n        if (nextProps.skipsDiagramUpdate)\r\n            return false;\r\n        if (nextProps.nodeDataArray === this.props.nodeDataArray &&\r\n            nextProps.linkDataArray === this.props.linkDataArray &&\r\n            nextProps.modelData === this.props.modelData)\r\n            return false;\r\n        return true;\r\n    };\r\n    ReactDiagram.prototype.componentDidUpdate = function (prevProps, prevState) {\r\n        var diagram = this.getDiagram();\r\n        if (diagram !== null) {\r\n            var model = diagram.model;\r\n            model.startTransaction('update data');\r\n            model.mergeNodeDataArray(this.props.nodeDataArray);\r\n            if (this.props.linkDataArray !== undefined && model instanceof GraphLinksModel) {\r\n                model.mergeLinkDataArray(this.props.linkDataArray);\r\n            }\r\n            if (this.props.modelData !== undefined) {\r\n                model.assignAllDataProperties(model.modelData, this.props.modelData);\r\n            }\r\n            model.commitTransaction('update data');\r\n        }\r\n    };\r\n    ReactDiagram.prototype.render = function () {\r\n        return (createElement(\"div\", { ref: this.divRef, className: this.props.divClassName }));\r\n    };\r\n    return ReactDiagram;\r\n}(Component));\n\nvar ReactOverview = (function (_super) {\r\n    __extends(ReactOverview, _super);\r\n    function ReactOverview(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.divRef = createRef();\r\n        return _this;\r\n    }\r\n    ReactOverview.prototype.getOverview = function () {\r\n        if (this.divRef.current === null)\r\n            return null;\r\n        return Diagram.fromDiv(this.divRef.current);\r\n    };\r\n    ReactOverview.prototype.componentDidMount = function () {\r\n        if (this.divRef.current === null)\r\n            return;\r\n        var overview;\r\n        if (this.props.initOverview !== undefined) {\r\n            overview = this.props.initOverview();\r\n        }\r\n        else {\r\n            overview = new Overview();\r\n            overview.contentAlignment = Spot.Center;\r\n        }\r\n        overview.div = this.divRef.current;\r\n        overview.observed = this.props.observedDiagram;\r\n    };\r\n    ReactOverview.prototype.componentWillUnmount = function () {\r\n        var overview = this.getOverview();\r\n        if (overview !== null) {\r\n            overview.div = null;\r\n            overview.observed = null;\r\n        }\r\n    };\r\n    ReactOverview.prototype.shouldComponentUpdate = function (nextProps, nextState) {\r\n        if (nextProps.observedDiagram === this.props.observedDiagram)\r\n            return false;\r\n        return true;\r\n    };\r\n    ReactOverview.prototype.componentDidUpdate = function (prevProps, prevState) {\r\n        var overview = this.getOverview();\r\n        if (overview !== null) {\r\n            overview.observed = this.props.observedDiagram;\r\n        }\r\n    };\r\n    ReactOverview.prototype.render = function () {\r\n        return (createElement(\"div\", { ref: this.divRef, className: this.props.divClassName }));\r\n    };\r\n    return ReactOverview;\r\n}(Component));\n\nvar ReactPalette = (function (_super) {\r\n    __extends(ReactPalette, _super);\r\n    function ReactPalette(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.divRef = createRef();\r\n        return _this;\r\n    }\r\n    ReactPalette.prototype.getPalette = function () {\r\n        if (this.divRef.current === null)\r\n            return null;\r\n        return Diagram.fromDiv(this.divRef.current);\r\n    };\r\n    ReactPalette.prototype.componentDidMount = function () {\r\n        var _this = this;\r\n        if (this.divRef.current === null)\r\n            return;\r\n        var palette = this.props.initPalette();\r\n        palette.div = this.divRef.current;\r\n        palette.delayInitialization(function () {\r\n            var model = palette.model;\r\n            model.commit(function (m) {\r\n                m.mergeNodeDataArray(_this.props.nodeDataArray);\r\n                if (_this.props.linkDataArray !== undefined && m instanceof GraphLinksModel) {\r\n                    m.mergeLinkDataArray(_this.props.linkDataArray);\r\n                }\r\n                if (_this.props.modelData !== undefined) {\r\n                    m.assignAllDataProperties(m.modelData, _this.props.modelData);\r\n                }\r\n            }, null);\r\n        });\r\n    };\r\n    ReactPalette.prototype.componentWillUnmount = function () {\r\n        var palette = this.getPalette();\r\n        if (palette !== null) {\r\n            palette.div = null;\r\n        }\r\n    };\r\n    ReactPalette.prototype.shouldComponentUpdate = function (nextProps, nextState) {\r\n        if (nextProps.nodeDataArray === this.props.nodeDataArray &&\r\n            nextProps.linkDataArray === this.props.linkDataArray &&\r\n            nextProps.modelData === this.props.modelData)\r\n            return false;\r\n        return true;\r\n    };\r\n    ReactPalette.prototype.componentDidUpdate = function (prevProps, prevState) {\r\n        var palette = this.getPalette();\r\n        if (palette !== null) {\r\n            var model = palette.model;\r\n            model.startTransaction('update data');\r\n            model.mergeNodeDataArray(this.props.nodeDataArray);\r\n            if (this.props.linkDataArray !== undefined && model instanceof GraphLinksModel) {\r\n                model.mergeLinkDataArray(this.props.linkDataArray);\r\n            }\r\n            if (this.props.modelData !== undefined) {\r\n                model.assignAllDataProperties(model.modelData, this.props.modelData);\r\n            }\r\n            model.commitTransaction('update data');\r\n        }\r\n    };\r\n    ReactPalette.prototype.render = function () {\r\n        return (createElement(\"div\", { ref: this.divRef, className: this.props.divClassName }));\r\n    };\r\n    return ReactPalette;\r\n}(Component));\n\nexport { ReactDiagram, ReactOverview, ReactPalette };\n"]},"metadata":{},"sourceType":"module"}