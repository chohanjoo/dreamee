{"ast":null,"code":"var _jsxFileName = \"/Users/hj/dreamee-ui/src/components/Graph/Test.js\";\n// App.js\nimport React from 'react';\nimport * as go from 'gojs';\nimport { ReactDiagram } from 'gojs-react';\nimport 'assets/css/App.css'; // contains .diagram-component CSS\n// ...\n\n/**\n * Diagram initialization method, which is passed to the ReactDiagram component.\n * This method is responsible for making the diagram and initializing the model and any templates.\n * The model's data should not be set here, as the ReactDiagram component handles that via the other props.\n */\n\nfunction init() {\n  if (window.goSamples) goSamples(); // init for these samples -- you don't need to call this\n\n  var $ = go.GraphObject.make;\n  myDiagram = $(go.Diagram, \"myDiagramDiv\", {\n    // when a drag-drop occurs in the Diagram's background, make it a top-level node\n    mouseDrop: function mouseDrop(e) {\n      finishDrop(e, null);\n    },\n    layout: // Diagram has simple horizontal layout\n    $(go.GridLayout, {\n      wrappingWidth: Infinity,\n      alignment: go.GridLayout.Position,\n      cellSize: new go.Size(1, 1)\n    }),\n    \"commandHandler.archetypeGroupData\": {\n      isGroup: true,\n      text: \"Group\",\n      horiz: false\n    },\n    \"undoManager.isEnabled\": true\n  }); // The one template for Groups can be configured to be either layout out its members\n  // horizontally or vertically, each with a different default color.\n\n  function makeLayout(horiz) {\n    // a Binding conversion function\n    if (horiz) {\n      return $(go.GridLayout, {\n        wrappingWidth: Infinity,\n        alignment: go.GridLayout.Position,\n        cellSize: new go.Size(1, 1),\n        spacing: new go.Size(4, 4)\n      });\n    } else {\n      return $(go.GridLayout, {\n        wrappingColumn: 1,\n        alignment: go.GridLayout.Position,\n        cellSize: new go.Size(1, 1),\n        spacing: new go.Size(4, 4)\n      });\n    }\n  }\n\n  function defaultColor(horiz) {\n    // a Binding conversion function\n    return horiz ? \"#FFDD33\" : \"#33D3E5\";\n  }\n\n  function defaultFont(horiz) {\n    // a Binding conversion function\n    return horiz ? \"bold 18px sans-serif\" : \"bold 16px sans-serif\";\n  } // this function is used to highlight a Group that the selection may be dropped into\n\n\n  function highlightGroup(e, grp, show) {\n    if (!grp) return;\n    e.handled = true;\n\n    if (show) {\n      // cannot depend on the grp.diagram.selection in the case of external drag-and-drops;\n      // instead depend on the DraggingTool.draggedParts or .copiedParts\n      var tool = grp.diagram.toolManager.draggingTool;\n      var map = tool.draggedParts || tool.copiedParts; // this is a Map\n      // now we can check to see if the Group will accept membership of the dragged Parts\n\n      if (grp.canAddMembers(map.toKeySet())) {\n        grp.isHighlighted = true;\n        return;\n      }\n    }\n\n    grp.isHighlighted = false;\n  } // Upon a drop onto a Group, we try to add the selection as members of the Group.\n  // Upon a drop onto the background, or onto a top-level Node, make selection top-level.\n  // If this is OK, we're done; otherwise we cancel the operation to rollback everything.\n\n\n  function finishDrop(e, grp) {\n    var ok = grp !== null ? grp.addMembers(grp.diagram.selection, true) : e.diagram.commandHandler.addTopLevelParts(e.diagram.selection, true);\n    if (!ok) e.diagram.currentTool.doCancel();\n  }\n\n  myDiagram.groupTemplate = $(go.Group, \"Auto\", {\n    background: \"transparent\",\n    ungroupable: true,\n    // highlight when dragging into the Group\n    mouseDragEnter: function mouseDragEnter(e, grp, prev) {\n      highlightGroup(e, grp, true);\n    },\n    mouseDragLeave: function mouseDragLeave(e, grp, next) {\n      highlightGroup(e, grp, false);\n    },\n    computesBoundsAfterDrag: true,\n    // when the selection is dropped into a Group, add the selected Parts into that Group;\n    // if it fails, cancel the tool, rolling back any changes\n    mouseDrop: finishDrop,\n    handlesDragDropForMembers: true,\n    // don't need to define handlers on member Nodes and Links\n    // Groups containing Groups lay out their members horizontally\n    layout: makeLayout(false)\n  }, new go.Binding(\"layout\", \"horiz\", makeLayout), new go.Binding(\"background\", \"isHighlighted\", function (h) {\n    return h ? \"rgba(255,0,0,0.2)\" : \"transparent\";\n  }).ofObject(), $(go.Shape, \"Rectangle\", {\n    fill: null,\n    stroke: defaultColor(false),\n    strokeWidth: 2\n  }, new go.Binding(\"stroke\", \"horiz\", defaultColor), new go.Binding(\"stroke\", \"color\")), $(go.Panel, \"Vertical\", // title above Placeholder\n  $(go.Panel, \"Horizontal\", // button next to TextBlock\n  {\n    stretch: go.GraphObject.Horizontal,\n    background: defaultColor(false)\n  }, new go.Binding(\"background\", \"horiz\", defaultColor), new go.Binding(\"background\", \"color\"), $(\"SubGraphExpanderButton\", {\n    alignment: go.Spot.Right,\n    margin: 5\n  }), $(go.TextBlock, {\n    alignment: go.Spot.Left,\n    editable: true,\n    margin: 5,\n    font: defaultFont(false),\n    opacity: 0.75,\n    // allow some color to show through\n    stroke: \"#404040\"\n  }, new go.Binding(\"font\", \"horiz\", defaultFont), new go.Binding(\"text\", \"text\").makeTwoWay())), // end Horizontal Panel\n  $(go.Placeholder, {\n    padding: 5,\n    alignment: go.Spot.TopLeft\n  })) // end Vertical Panel\n  );\n  myDiagram.nodeTemplate = $(go.Node, \"Auto\", {\n    // dropping on a Node is the same as dropping on its containing Group, even if it's top-level\n    mouseDrop: function mouseDrop(e, node) {\n      finishDrop(e, node.containingGroup);\n    }\n  }, $(go.Shape, \"Rectangle\", {\n    fill: \"#ACE600\",\n    stroke: null\n  }, new go.Binding(\"fill\", \"color\")), $(go.TextBlock, {\n    margin: 5,\n    editable: true,\n    font: \"bold 13px sans-serif\",\n    opacity: 0.75,\n    stroke: \"#404040\"\n  }, new go.Binding(\"text\", \"text\").makeTwoWay())); // initialize the Palette and its contents\n\n  myPalette = $(go.Palette, \"myPaletteDiv\", {\n    nodeTemplateMap: myDiagram.nodeTemplateMap,\n    groupTemplateMap: myDiagram.groupTemplateMap\n  });\n  myPalette.model = new go.GraphLinksModel([{\n    text: \"lightgreen\",\n    color: \"#ACE600\"\n  }, {\n    text: \"yellow\",\n    color: \"#FFDD33\"\n  }, {\n    text: \"lightblue\",\n    color: \"#33D3E5\"\n  }, {\n    isGroup: true,\n    text: \"H Group\",\n    horiz: true\n  }, {\n    isGroup: true,\n    text: \"V Group\",\n    horiz: false\n  }]);\n  var slider = document.getElementById(\"levelSlider\");\n  slider.addEventListener('change', reexpand);\n  slider.addEventListener('input', reexpand);\n  load();\n}\n\nfunction reexpand(e) {\n  myDiagram.commit(function (diag) {\n    var level = parseInt(document.getElementById(\"levelSlider\").value);\n    diag.findTopLevelGroups().each(function (g) {\n      expandGroups(g, 0, level);\n    });\n  }, \"reexpand\");\n}\n\nfunction expandGroups(g, i, level) {\n  if (!(g instanceof go.Group)) return;\n  g.isSubGraphExpanded = i < level;\n  g.memberParts.each(function (m) {\n    expandGroups(m, i + 1, level);\n  });\n} // save a model to and load a model from JSON text, displayed below the Diagram\n\n\nfunction save() {\n  document.getElementById(\"mySavedModel\").value = myDiagram.model.toJson();\n  myDiagram.isModified = false;\n}\n\nfunction load() {\n  myDiagram.model = go.Model.fromJson(document.getElementById(\"mySavedModel\").value);\n}\n/**\n * This function handles any changes to the GoJS model.\n * It is here that you would make any updates to your React state, which is dicussed below.\n */\n\n\nfunction handleModelChange(changes) {} // render function...\n\n\nexport default function App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, \"...\", /*#__PURE__*/React.createElement(ReactDiagram, {\n    initDiagram: init,\n    divClassName: \"diagram-component\",\n    nodeDataArray: [{\n      key: 0,\n      text: 'Alpha',\n      color: 'lightblue',\n      loc: '0 0'\n    }, {\n      key: 1,\n      text: 'Beta',\n      color: 'orange',\n      loc: '150 0'\n    }, {\n      key: 2,\n      text: 'Gamma',\n      color: 'lightgreen',\n      loc: '0 150'\n    }, {\n      key: 3,\n      text: 'Delta',\n      color: 'pink',\n      loc: '150 150'\n    }],\n    linkDataArray: [{\n      key: -1,\n      from: 0,\n      to: 1\n    }, {\n      key: -2,\n      from: 0,\n      to: 2\n    }, {\n      key: -3,\n      from: 1,\n      to: 1\n    }, {\n      key: -4,\n      from: 2,\n      to: 3\n    }, {\n      key: -5,\n      from: 3,\n      to: 0\n    }],\n    onModelChange: handleModelChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }), \"...\");\n}","map":{"version":3,"sources":["/Users/hj/dreamee-ui/src/components/Graph/Test.js"],"names":["React","go","ReactDiagram","init","window","goSamples","$","GraphObject","make","myDiagram","Diagram","mouseDrop","e","finishDrop","layout","GridLayout","wrappingWidth","Infinity","alignment","Position","cellSize","Size","isGroup","text","horiz","makeLayout","spacing","wrappingColumn","defaultColor","defaultFont","highlightGroup","grp","show","handled","tool","diagram","toolManager","draggingTool","map","draggedParts","copiedParts","canAddMembers","toKeySet","isHighlighted","ok","addMembers","selection","commandHandler","addTopLevelParts","currentTool","doCancel","groupTemplate","Group","background","ungroupable","mouseDragEnter","prev","mouseDragLeave","next","computesBoundsAfterDrag","handlesDragDropForMembers","Binding","h","ofObject","Shape","fill","stroke","strokeWidth","Panel","stretch","Horizontal","Spot","Right","margin","TextBlock","Left","editable","font","opacity","makeTwoWay","Placeholder","padding","TopLeft","nodeTemplate","Node","node","containingGroup","myPalette","Palette","nodeTemplateMap","groupTemplateMap","model","GraphLinksModel","color","slider","document","getElementById","addEventListener","reexpand","load","commit","diag","level","parseInt","value","findTopLevelGroups","each","g","expandGroups","i","isSubGraphExpanded","memberParts","m","save","toJson","isModified","Model","fromJson","handleModelChange","changes","App","key","loc","from","to"],"mappings":"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","sourcesContent":["  // App.js\n  import React from 'react';\n\n  import * as go from 'gojs';\n  import { ReactDiagram } from 'gojs-react';\n\n  import 'assets/css/App.css';  // contains .diagram-component CSS\n\n  // ...\n\n  /**\n   * Diagram initialization method, which is passed to the ReactDiagram component.\n   * This method is responsible for making the diagram and initializing the model and any templates.\n   * The model's data should not be set here, as the ReactDiagram component handles that via the other props.\n   */\n  function init() {\n    if (window.goSamples) goSamples();  // init for these samples -- you don't need to call this\n    var $ = go.GraphObject.make;\n\n    myDiagram =\n      $(go.Diagram, \"myDiagramDiv\",\n        {\n          // when a drag-drop occurs in the Diagram's background, make it a top-level node\n          mouseDrop: function(e) { finishDrop(e, null); },\n          layout:  // Diagram has simple horizontal layout\n            $(go.GridLayout,\n              { wrappingWidth: Infinity, alignment: go.GridLayout.Position, cellSize: new go.Size(1, 1) }),\n          \"commandHandler.archetypeGroupData\": { isGroup: true, text: \"Group\", horiz: false },\n          \"undoManager.isEnabled\": true\n        });\n\n        // The one template for Groups can be configured to be either layout out its members\n      // horizontally or vertically, each with a different default color.\n\n      function makeLayout(horiz) {  // a Binding conversion function\n        if (horiz) {\n          return $(go.GridLayout,\n            {\n              wrappingWidth: Infinity, alignment: go.GridLayout.Position,\n              cellSize: new go.Size(1, 1), spacing: new go.Size(4, 4)\n            });\n        } else {\n          return $(go.GridLayout,\n            {\n              wrappingColumn: 1, alignment: go.GridLayout.Position,\n              cellSize: new go.Size(1, 1), spacing: new go.Size(4, 4)\n            });\n        }\n      }\n\n      function defaultColor(horiz) {  // a Binding conversion function\n        return horiz ? \"#FFDD33\" : \"#33D3E5\";\n      }\n\n      function defaultFont(horiz) {  // a Binding conversion function\n        return horiz ? \"bold 18px sans-serif\" : \"bold 16px sans-serif\";\n      }\n\n      // this function is used to highlight a Group that the selection may be dropped into\n      function highlightGroup(e, grp, show) {\n        if (!grp) return;\n        e.handled = true;\n        if (show) {\n          // cannot depend on the grp.diagram.selection in the case of external drag-and-drops;\n          // instead depend on the DraggingTool.draggedParts or .copiedParts\n          var tool = grp.diagram.toolManager.draggingTool;\n          var map = tool.draggedParts || tool.copiedParts;  // this is a Map\n          // now we can check to see if the Group will accept membership of the dragged Parts\n          if (grp.canAddMembers(map.toKeySet())) {\n            grp.isHighlighted = true;\n            return;\n          }\n        }\n        grp.isHighlighted = false;\n      }\n\n      // Upon a drop onto a Group, we try to add the selection as members of the Group.\n      // Upon a drop onto the background, or onto a top-level Node, make selection top-level.\n      // If this is OK, we're done; otherwise we cancel the operation to rollback everything.\n      function finishDrop(e, grp) {\n        var ok = (grp !== null\n          ? grp.addMembers(grp.diagram.selection, true)\n          : e.diagram.commandHandler.addTopLevelParts(e.diagram.selection, true));\n        if (!ok) e.diagram.currentTool.doCancel();\n      }\n\n      myDiagram.groupTemplate =\n        $(go.Group, \"Auto\",\n          {\n            background: \"transparent\",\n            ungroupable: true,\n            // highlight when dragging into the Group\n            mouseDragEnter: function(e, grp, prev) { highlightGroup(e, grp, true); },\n            mouseDragLeave: function(e, grp, next) { highlightGroup(e, grp, false); },\n            computesBoundsAfterDrag: true,\n            // when the selection is dropped into a Group, add the selected Parts into that Group;\n            // if it fails, cancel the tool, rolling back any changes\n            mouseDrop: finishDrop,\n            handlesDragDropForMembers: true,  // don't need to define handlers on member Nodes and Links\n            // Groups containing Groups lay out their members horizontally\n            layout: makeLayout(false)\n          },\n          new go.Binding(\"layout\", \"horiz\", makeLayout),\n          new go.Binding(\"background\", \"isHighlighted\", function(h) {\n            return h ? \"rgba(255,0,0,0.2)\" : \"transparent\";\n          }).ofObject(),\n          $(go.Shape, \"Rectangle\",\n            { fill: null, stroke: defaultColor(false), strokeWidth: 2 },\n            new go.Binding(\"stroke\", \"horiz\", defaultColor),\n            new go.Binding(\"stroke\", \"color\")),\n          $(go.Panel, \"Vertical\",  // title above Placeholder\n            $(go.Panel, \"Horizontal\",  // button next to TextBlock\n              { stretch: go.GraphObject.Horizontal, background: defaultColor(false) },\n              new go.Binding(\"background\", \"horiz\", defaultColor),\n              new go.Binding(\"background\", \"color\"),\n              $(\"SubGraphExpanderButton\",\n                { alignment: go.Spot.Right, margin: 5 }),\n              $(go.TextBlock,\n                {\n                  alignment: go.Spot.Left,\n                  editable: true,\n                  margin: 5,\n                  font: defaultFont(false),\n                  opacity: 0.75,  // allow some color to show through\n                  stroke: \"#404040\"\n                },\n                new go.Binding(\"font\", \"horiz\", defaultFont),\n                new go.Binding(\"text\", \"text\").makeTwoWay())\n            ),  // end Horizontal Panel\n            $(go.Placeholder,\n              { padding: 5, alignment: go.Spot.TopLeft })\n          )  // end Vertical Panel\n        );\n\n      myDiagram.nodeTemplate =\n        $(go.Node, \"Auto\",\n          { // dropping on a Node is the same as dropping on its containing Group, even if it's top-level\n            mouseDrop: function(e, node) { finishDrop(e, node.containingGroup); }\n          },\n          $(go.Shape, \"Rectangle\",\n            { fill: \"#ACE600\", stroke: null },\n            new go.Binding(\"fill\", \"color\")),\n          $(go.TextBlock,\n            {\n              margin: 5,\n              editable: true,\n              font: \"bold 13px sans-serif\",\n              opacity: 0.75,\n              stroke: \"#404040\"\n            },\n            new go.Binding(\"text\", \"text\").makeTwoWay())\n        );\n\n      // initialize the Palette and its contents\n      myPalette =\n        $(go.Palette, \"myPaletteDiv\",\n          {\n            nodeTemplateMap: myDiagram.nodeTemplateMap,\n            groupTemplateMap: myDiagram.groupTemplateMap\n          });\n\n      myPalette.model = new go.GraphLinksModel([\n        { text: \"lightgreen\", color: \"#ACE600\" },\n        { text: \"yellow\", color: \"#FFDD33\" },\n        { text: \"lightblue\", color: \"#33D3E5\" },\n        { isGroup: true, text: \"H Group\", horiz: true },\n        { isGroup: true, text: \"V Group\", horiz: false }\n      ]);\n\n      var slider = document.getElementById(\"levelSlider\");\n      slider.addEventListener('change', reexpand);\n      slider.addEventListener('input', reexpand);\n\n      load();\n    }\n\n    function reexpand(e) {\n      myDiagram.commit(function(diag) {\n        var level = parseInt(document.getElementById(\"levelSlider\").value);\n        diag.findTopLevelGroups().each(function(g) { expandGroups(g, 0, level); })\n      } ,\"reexpand\");\n    }\n    function expandGroups(g, i, level) {\n      if (!(g instanceof go.Group)) return;\n      g.isSubGraphExpanded = i < level;\n      g.memberParts.each(function(m) {\n        expandGroups(m, i + 1, level);\n      })\n    }\n\n    // save a model to and load a model from JSON text, displayed below the Diagram\n    function save() {\n      document.getElementById(\"mySavedModel\").value = myDiagram.model.toJson();\n      myDiagram.isModified = false;\n    }\n    function load() {\n      myDiagram.model = go.Model.fromJson(document.getElementById(\"mySavedModel\").value);\n    }\n  /**\n   * This function handles any changes to the GoJS model.\n   * It is here that you would make any updates to your React state, which is dicussed below.\n   */\n  function handleModelChange(changes) {\n\n  }\n\n  // render function...\n  export default function App() {\n    return (\n      <div>\n        ...\n        <ReactDiagram\n          initDiagram={init}\n          divClassName='diagram-component'\n          nodeDataArray={[\n            { key: 0, text: 'Alpha', color: 'lightblue', loc: '0 0' },\n            { key: 1, text: 'Beta', color: 'orange', loc: '150 0' },\n            { key: 2, text: 'Gamma', color: 'lightgreen', loc: '0 150' },\n            { key: 3, text: 'Delta', color: 'pink', loc: '150 150' }\n          ]}\n          linkDataArray={[\n            { key: -1, from: 0, to: 1 },\n            { key: -2, from: 0, to: 2 },\n            { key: -3, from: 1, to: 1 },\n            { key: -4, from: 2, to: 3 },\n            { key: -5, from: 3, to: 0 }\n          ]}\n          onModelChange={handleModelChange}\n        />\n        ...\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}