{"ast":null,"code":"import _classCallCheck from \"/Users/hj/dreamee-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hj/dreamee-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/hj/dreamee-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/hj/dreamee-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/hj/dreamee-ui/src/components/Graph/SimpleGraph.js\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { Chart } from \"react-google-charts\";\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"my-pretty-chart-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Chart, {\n        width: '1000px',\n        height: '300px',\n        chartType: \"WordTree\",\n        loader: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 11\n          }\n        }, \"Loading Chart\"),\n        data: [['id', 'childLabel', 'parent', 'size', {\n          role: 'style'\n        }], [0, 'Life', -1, 1, 'black'], [1, 'Archaea', 0, 1, 'black'], [2, 'Eukarya', 0, 5, 'black'], [3, 'Bacteria', 0, 1, 'black'], [4, 'Crenarchaeota', 1, 1, 'black'], [5, 'Euryarchaeota', 1, 1, 'black'], [6, 'Korarchaeota', 1, 1, 'black'], [7, 'Nanoarchaeota', 1, 1, 'black'], [8, 'Thaumarchaeota', 1, 1, 'black'], [9, 'Amoebae', 2, 1, 'black'], [10, 'Plants', 2, 1, 'black'], [11, 'Chromalveolata', 2, 1, 'black'], [12, 'Opisthokonta', 2, 5, 'black'], [13, 'Rhizaria', 2, 1, 'black'], [14, 'Excavata', 2, 1, 'black'], [15, 'Animalia', 12, 5, 'black'], [16, 'Fungi', 12, 2, 'black'], [17, 'Parazoa', 15, 2, 'black'], [18, 'Eumetazoa', 15, 5, 'black'], [19, 'Radiata', 18, 2, 'black'], [20, 'Bilateria', 18, 5, 'black'], [21, 'Orthonectida', 20, 2, 'black'], [22, 'Rhombozoa', 20, 2, 'black'], [23, 'Acoelomorpha', 20, 1, 'black'], [24, 'Deuterostomia', 20, 5, 'black'], [25, 'Chaetognatha', 20, 2, 'black'], [26, 'Protostomia', 20, 2, 'black'], [27, 'Chordata', 24, 5, 'black'], [28, 'Hemichordata', 24, 1, 'black'], [29, 'Echinodermata', 24, 1, 'black'], [30, 'Xenoturbellida', 24, 1, 'black'], [31, 'Vetulicolia', 24, 1, 'black']],\n        options: {\n          colors: ['black', 'black', 'black'],\n          wordtree: {\n            format: 'explicit',\n            type: 'suffix'\n          }\n        },\n        rootProps: {\n          'data-testid': '2'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 8\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/hj/dreamee-ui/src/components/Graph/SimpleGraph.js"],"names":["React","render","Chart","App","role","colors","wordtree","format","type","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { Chart } from \"react-google-charts\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div className={\"my-pretty-chart-container\"}>\n       <Chart\n  width={'1000px'}\n  height={'300px'}\n  chartType=\"WordTree\"\n  loader={<div>Loading Chart</div>}\n  data={[\n    ['id', 'childLabel', 'parent', 'size', { role: 'style' }],\n    [0, 'Life', -1, 1, 'black'],\n    [1, 'Archaea', 0, 1, 'black'],\n    [2, 'Eukarya', 0, 5, 'black'],\n    [3, 'Bacteria', 0, 1, 'black'],\n    [4, 'Crenarchaeota', 1, 1, 'black'],\n    [5, 'Euryarchaeota', 1, 1, 'black'],\n    [6, 'Korarchaeota', 1, 1, 'black'],\n    [7, 'Nanoarchaeota', 1, 1, 'black'],\n    [8, 'Thaumarchaeota', 1, 1, 'black'],\n    [9, 'Amoebae', 2, 1, 'black'],\n    [10, 'Plants', 2, 1, 'black'],\n    [11, 'Chromalveolata', 2, 1, 'black'],\n    [12, 'Opisthokonta', 2, 5, 'black'],\n    [13, 'Rhizaria', 2, 1, 'black'],\n    [14, 'Excavata', 2, 1, 'black'],\n    [15, 'Animalia', 12, 5, 'black'],\n    [16, 'Fungi', 12, 2, 'black'],\n    [17, 'Parazoa', 15, 2, 'black'],\n    [18, 'Eumetazoa', 15, 5, 'black'],\n    [19, 'Radiata', 18, 2, 'black'],\n    [20, 'Bilateria', 18, 5, 'black'],\n    [21, 'Orthonectida', 20, 2, 'black'],\n    [22, 'Rhombozoa', 20, 2, 'black'],\n    [23, 'Acoelomorpha', 20, 1, 'black'],\n    [24, 'Deuterostomia', 20, 5, 'black'],\n    [25, 'Chaetognatha', 20, 2, 'black'],\n    [26, 'Protostomia', 20, 2, 'black'],\n    [27, 'Chordata', 24, 5, 'black'],\n    [28, 'Hemichordata', 24, 1, 'black'],\n    [29, 'Echinodermata', 24, 1, 'black'],\n    [30, 'Xenoturbellida', 24, 1, 'black'],\n    [31, 'Vetulicolia', 24, 1, 'black'],\n  ]}\n  options={{\n    colors: ['black', 'black', 'black'],\n    wordtree: {\n      format: 'explicit',\n      type: 'suffix',\n    },\n  }}\n  rootProps={{ 'data-testid': '2' }}\n/>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}