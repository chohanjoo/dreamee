{"ast":null,"code":"var _jsxFileName = \"/Users/hj/dreamee-ui/src/components/Graph/Test.js\";\n// App.js\nimport React from 'react';\nimport * as go from 'gojs';\nimport { ReactDiagram } from 'gojs-react';\nimport 'assets/css/App.css'; // contains .diagram-component CSS\n// ...\n\n/**\n * Diagram initialization method, which is passed to the ReactDiagram component.\n * This method is responsible for making the diagram and initializing the model and any templates.\n * The model's data should not be set here, as the ReactDiagram component handles that via the other props.\n */\n\nfunction initDiagram() {\n  var $ = go.GraphObject.make; // set your license key here before creating the diagram: go.Diagram.licenseKey = \"...\";\n\n  var diagram = $(go.Diagram, {\n    'undoManager.isEnabled': true,\n    // must be set to allow for model change listening\n    // 'undoManager.maxHistoryLength': 0,  // uncomment disable undo/redo functionality\n    'clickCreatingTool.archetypeNodeData': {\n      text: 'new node',\n      color: 'lightblue'\n    },\n    model: $(go.GraphLinksModel, {\n      linkKeyProperty: 'key' // IMPORTANT! must be defined for merges and data sync when using GraphLinksModel\n\n    })\n  }); // define a simple Node template\n\n  diagram.nodeTemplate = $(go.Node, 'Auto', // the Shape will go around the TextBlock\n  new go.Binding('location', 'loc', go.Point.parse).makeTwoWay(go.Point.stringify), $(go.Shape, 'RoundedRectangle', {\n    name: 'SHAPE',\n    fill: 'white',\n    strokeWidth: 0\n  }, // Shape.fill is bound to Node.data.color\n  new go.Binding('fill', 'color')), $(go.TextBlock, {\n    margin: 8,\n    editable: true\n  }, // some room around the text\n  new go.Binding('text').makeTwoWay()));\n  return diagram;\n}\n/**\n * This function handles any changes to the GoJS model.\n * It is here that you would make any updates to your React state, which is dicussed below.\n */\n\n\nfunction handleModelChange(changes) {\n  alert('GoJS model changed!');\n} // render function...\n\n\nexport default function App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"...\", /*#__PURE__*/React.createElement(ReactDiagram, {\n    initDiagram: initDiagram,\n    divClassName: \"diagram-component\",\n    nodeDataArray: [{\n      key: 0,\n      text: 'Alpha',\n      color: 'lightblue',\n      loc: '0 0'\n    }, {\n      key: 1,\n      text: 'Beta',\n      color: 'orange',\n      loc: '150 0'\n    }, {\n      key: 2,\n      text: 'Gamma',\n      color: 'lightgreen',\n      loc: '0 150'\n    }, {\n      key: 3,\n      text: 'Delta',\n      color: 'pink',\n      loc: '150 150'\n    }],\n    linkDataArray: [{\n      key: -1,\n      from: 0,\n      to: 1\n    }, {\n      key: -2,\n      from: 0,\n      to: 2\n    }, {\n      key: -3,\n      from: 1,\n      to: 1\n    }, {\n      key: -4,\n      from: 2,\n      to: 3\n    }, {\n      key: -5,\n      from: 3,\n      to: 0\n    }],\n    onModelChange: handleModelChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), \"...\");\n}","map":{"version":3,"sources":["/Users/hj/dreamee-ui/src/components/Graph/Test.js"],"names":["React","go","ReactDiagram","initDiagram","$","GraphObject","make","diagram","Diagram","text","color","model","GraphLinksModel","linkKeyProperty","nodeTemplate","Node","Binding","Point","parse","makeTwoWay","stringify","Shape","name","fill","strokeWidth","TextBlock","margin","editable","handleModelChange","changes","alert","App","key","loc","from","to"],"mappings":"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","sourcesContent":["  // App.js\n  import React from 'react';\n\n  import * as go from 'gojs';\n  import { ReactDiagram } from 'gojs-react';\n\n  import 'assets/css/App.css';  // contains .diagram-component CSS\n\n  // ...\n\n  /**\n   * Diagram initialization method, which is passed to the ReactDiagram component.\n   * This method is responsible for making the diagram and initializing the model and any templates.\n   * The model's data should not be set here, as the ReactDiagram component handles that via the other props.\n   */\n  function initDiagram() {\n    const $ = go.GraphObject.make;\n    // set your license key here before creating the diagram: go.Diagram.licenseKey = \"...\";\n    const diagram =\n      $(go.Diagram,\n        {\n          'undoManager.isEnabled': true,  // must be set to allow for model change listening\n          // 'undoManager.maxHistoryLength': 0,  // uncomment disable undo/redo functionality\n          'clickCreatingTool.archetypeNodeData': { text: 'new node', color: 'lightblue' },\n          model: $(go.GraphLinksModel,\n            {\n              linkKeyProperty: 'key'  // IMPORTANT! must be defined for merges and data sync when using GraphLinksModel\n            })\n        });\n\n    // define a simple Node template\n    diagram.nodeTemplate =\n      $(go.Node, 'Auto',  // the Shape will go around the TextBlock\n        new go.Binding('location', 'loc', go.Point.parse).makeTwoWay(go.Point.stringify),\n        $(go.Shape, 'RoundedRectangle',\n          { name: 'SHAPE', fill: 'white', strokeWidth: 0 },\n          // Shape.fill is bound to Node.data.color\n          new go.Binding('fill', 'color')),\n        $(go.TextBlock,\n          { margin: 8, editable: true },  // some room around the text\n          new go.Binding('text').makeTwoWay()\n        )\n      );\n\n    return diagram;\n  }\n\n  /**\n   * This function handles any changes to the GoJS model.\n   * It is here that you would make any updates to your React state, which is dicussed below.\n   */\n  function handleModelChange(changes) {\n    alert('GoJS model changed!');\n  }\n\n  // render function...\n  export default function App() {\n    return (\n      <div>\n        ...\n        <ReactDiagram\n          initDiagram={initDiagram}\n          divClassName='diagram-component'\n          nodeDataArray={[\n            { key: 0, text: 'Alpha', color: 'lightblue', loc: '0 0' },\n            { key: 1, text: 'Beta', color: 'orange', loc: '150 0' },\n            { key: 2, text: 'Gamma', color: 'lightgreen', loc: '0 150' },\n            { key: 3, text: 'Delta', color: 'pink', loc: '150 150' }\n          ]}\n          linkDataArray={[\n            { key: -1, from: 0, to: 1 },\n            { key: -2, from: 0, to: 2 },\n            { key: -3, from: 1, to: 1 },\n            { key: -4, from: 2, to: 3 },\n            { key: -5, from: 3, to: 0 }\n          ]}\n          onModelChange={handleModelChange}\n        />\n        ...\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}