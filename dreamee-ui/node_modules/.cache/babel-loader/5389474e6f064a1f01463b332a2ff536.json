{"ast":null,"code":"var _jsxFileName = \"/Users/hj/dreamee-ui/src/components/Graph/Test.js\";\n// App.js\nimport React from 'react';\nimport * as go from 'gojs';\nimport { ReactDiagram } from 'gojs-react';\nimport 'assets/css/App.css'; // contains .diagram-component CSS\n// ...\n\n/**\n * Diagram initialization method, which is passed to the ReactDiagram component.\n * This method is responsible for making the diagram and initializing the model and any templates.\n * The model's data should not be set here, as the ReactDiagram component handles that via the other props.\n */\n\nfunction initDiagram() {\n  var $ = go.GraphObject.make; // set your license key here before creating the diagram: go.Diagram.licenseKey = \"...\";\n\n  var diagram = $(go.Diagram, \"myDiagramDiv\", {\n    // when a drag-drop occurs in the Diagram's background, make it a top-level node\n    mouseDrop: function mouseDrop(e) {\n      finishDrop(e, null);\n    },\n    layout: // Diagram has simple horizontal layout\n    $(go.GridLayout, {\n      wrappingWidth: Infinity,\n      alignment: go.GridLayout.Position,\n      cellSize: new go.Size(1, 1)\n    }),\n    \"commandHandler.archetypeGroupData\": {\n      isGroup: true,\n      text: \"Group\",\n      horiz: false\n    },\n    \"undoManager.isEnabled\": true\n  }); // The one template for Groups can be configured to be either layout out its members\n  // horizontally or vertically, each with a different default color.\n\n  function makeLayout(horiz) {\n    // a Binding conversion function\n    if (horiz) {\n      return $(go.GridLayout, {\n        wrappingWidth: Infinity,\n        alignment: go.GridLayout.Position,\n        cellSize: new go.Size(1, 1),\n        spacing: new go.Size(4, 4)\n      });\n    } else {\n      return $(go.GridLayout, {\n        wrappingColumn: 1,\n        alignment: go.GridLayout.Position,\n        cellSize: new go.Size(1, 1),\n        spacing: new go.Size(4, 4)\n      });\n    }\n  }\n\n  function defaultColor(horiz) {\n    // a Binding conversion function\n    return horiz ? \"#FFDD33\" : \"#33D3E5\";\n  }\n\n  function defaultFont(horiz) {\n    // a Binding conversion function\n    return horiz ? \"bold 18px sans-serif\" : \"bold 16px sans-serif\";\n  } // this function is used to highlight a Group that the selection may be dropped into\n\n\n  function highlightGroup(e, grp, show) {\n    if (!grp) return;\n    e.handled = true;\n\n    if (show) {\n      // cannot depend on the grp.diagram.selection in the case of external drag-and-drops;\n      // instead depend on the DraggingTool.draggedParts or .copiedParts\n      var tool = grp.diagram.toolManager.draggingTool;\n      var map = tool.draggedParts || tool.copiedParts; // this is a Map\n      // now we can check to see if the Group will accept membership of the dragged Parts\n\n      if (grp.canAddMembers(map.toKeySet())) {\n        grp.isHighlighted = true;\n        return;\n      }\n    }\n\n    grp.isHighlighted = false;\n  } // Upon a drop onto a Group, we try to add the selection as members of the Group.\n  // Upon a drop onto the background, or onto a top-level Node, make selection top-level.\n  // If this is OK, we're done; otherwise we cancel the operation to rollback everything.\n\n\n  function finishDrop(e, grp) {\n    var ok = grp !== null ? grp.addMembers(grp.diagram.selection, true) : e.diagram.commandHandler.addTopLevelParts(e.diagram.selection, true);\n    if (!ok) e.diagram.currentTool.doCancel();\n  }\n\n  myDiagram.groupTemplate = $(go.Group, \"Auto\", {\n    background: \"transparent\",\n    ungroupable: true,\n    // highlight when dragging into the Group\n    mouseDragEnter: function mouseDragEnter(e, grp, prev) {\n      highlightGroup(e, grp, true);\n    },\n    mouseDragLeave: function mouseDragLeave(e, grp, next) {\n      highlightGroup(e, grp, false);\n    },\n    computesBoundsAfterDrag: true,\n    // when the selection is dropped into a Group, add the selected Parts into that Group;\n    // if it fails, cancel the tool, rolling back any changes\n    mouseDrop: finishDrop,\n    handlesDragDropForMembers: true,\n    // don't need to define handlers on member Nodes and Links\n    // Groups containing Groups lay out their members horizontally\n    layout: makeLayout(false)\n  }, new go.Binding(\"layout\", \"horiz\", makeLayout), new go.Binding(\"background\", \"isHighlighted\", function (h) {\n    return h ? \"rgba(255,0,0,0.2)\" : \"transparent\";\n  }).ofObject(), $(go.Shape, \"Rectangle\", {\n    fill: null,\n    stroke: defaultColor(false),\n    strokeWidth: 2\n  }, new go.Binding(\"stroke\", \"horiz\", defaultColor), new go.Binding(\"stroke\", \"color\")), $(go.Panel, \"Vertical\", // title above Placeholder\n  $(go.Panel, \"Horizontal\", // button next to TextBlock\n  {\n    stretch: go.GraphObject.Horizontal,\n    background: defaultColor(false)\n  }, new go.Binding(\"background\", \"horiz\", defaultColor), new go.Binding(\"background\", \"color\"), $(\"SubGraphExpanderButton\", {\n    alignment: go.Spot.Right,\n    margin: 5\n  }), $(go.TextBlock, {\n    alignment: go.Spot.Left,\n    editable: true,\n    margin: 5,\n    font: defaultFont(false),\n    opacity: 0.75,\n    // allow some color to show through\n    stroke: \"#404040\"\n  }, new go.Binding(\"font\", \"horiz\", defaultFont), new go.Binding(\"text\", \"text\").makeTwoWay())), // end Horizontal Panel\n  $(go.Placeholder, {\n    padding: 5,\n    alignment: go.Spot.TopLeft\n  })) // end Vertical Panel\n  ); // define a simple Node template\n\n  diagram.nodeTemplate = $(go.Node, 'Auto', // the Shape will go around the TextBlock\n  new go.Binding('location', 'loc', go.Point.parse).makeTwoWay(go.Point.stringify), $(go.Shape, 'RoundedRectangle', {\n    name: 'SHAPE',\n    fill: 'white',\n    strokeWidth: 0\n  }, // Shape.fill is bound to Node.data.color\n  new go.Binding('fill', 'color')), $(go.TextBlock, {\n    margin: 8,\n    editable: true\n  }, // some room around the text\n  new go.Binding('text').makeTwoWay()));\n  return diagram;\n}\n/**\n * This function handles any changes to the GoJS model.\n * It is here that you would make any updates to your React state, which is dicussed below.\n */\n\n\nfunction handleModelChange(changes) {\n  alert('GoJS model changed!');\n} // render function...\n\n\nexport default function App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, \"...\", /*#__PURE__*/React.createElement(ReactDiagram, {\n    initDiagram: initDiagram,\n    divClassName: \"diagram-component\",\n    nodeDataArray: [{\n      key: 0,\n      text: 'Alpha',\n      color: 'lightblue',\n      loc: '0 0'\n    }, {\n      key: 1,\n      text: 'Beta',\n      color: 'orange',\n      loc: '150 0'\n    }, {\n      key: 2,\n      text: 'Gamma',\n      color: 'lightgreen',\n      loc: '0 150'\n    }, {\n      key: 3,\n      text: 'Delta',\n      color: 'pink',\n      loc: '150 150'\n    }],\n    linkDataArray: [{\n      key: -1,\n      from: 0,\n      to: 1\n    }, {\n      key: -2,\n      from: 0,\n      to: 2\n    }, {\n      key: -3,\n      from: 1,\n      to: 1\n    }, {\n      key: -4,\n      from: 2,\n      to: 3\n    }, {\n      key: -5,\n      from: 3,\n      to: 0\n    }],\n    onModelChange: handleModelChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }), \"...\");\n}","map":{"version":3,"sources":["/Users/hj/dreamee-ui/src/components/Graph/Test.js"],"names":["React","go","ReactDiagram","initDiagram","$","GraphObject","make","diagram","Diagram","mouseDrop","e","finishDrop","layout","GridLayout","wrappingWidth","Infinity","alignment","Position","cellSize","Size","isGroup","text","horiz","makeLayout","spacing","wrappingColumn","defaultColor","defaultFont","highlightGroup","grp","show","handled","tool","toolManager","draggingTool","map","draggedParts","copiedParts","canAddMembers","toKeySet","isHighlighted","ok","addMembers","selection","commandHandler","addTopLevelParts","currentTool","doCancel","myDiagram","groupTemplate","Group","background","ungroupable","mouseDragEnter","prev","mouseDragLeave","next","computesBoundsAfterDrag","handlesDragDropForMembers","Binding","h","ofObject","Shape","fill","stroke","strokeWidth","Panel","stretch","Horizontal","Spot","Right","margin","TextBlock","Left","editable","font","opacity","makeTwoWay","Placeholder","padding","TopLeft","nodeTemplate","Node","Point","parse","stringify","name","handleModelChange","changes","alert","App","key","color","loc","from","to"],"mappings":";AAAE;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,EAAZ,MAAoB,MAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,OAAO,oBAAP,C,CAA8B;AAE9B;;AAEA;;;;;;AAKA,SAASC,WAAT,GAAuB;AACrB,MAAMC,CAAC,GAAGH,EAAE,CAACI,WAAH,CAAeC,IAAzB,CADqB,CAErB;;AACA,MAAMC,OAAO,GACbH,CAAC,CAACH,EAAE,CAACO,OAAJ,EAAa,cAAb,EACD;AACE;AACAC,IAAAA,SAAS,EAAE,mBAASC,CAAT,EAAY;AAAEC,MAAAA,UAAU,CAACD,CAAD,EAAI,IAAJ,CAAV;AAAsB,KAFjD;AAGEE,IAAAA,MAAM,EAAG;AACPR,IAAAA,CAAC,CAACH,EAAE,CAACY,UAAJ,EACC;AAAEC,MAAAA,aAAa,EAAEC,QAAjB;AAA2BC,MAAAA,SAAS,EAAEf,EAAE,CAACY,UAAH,CAAcI,QAApD;AAA8DC,MAAAA,QAAQ,EAAE,IAAIjB,EAAE,CAACkB,IAAP,CAAY,CAAZ,EAAe,CAAf;AAAxE,KADD,CAJL;AAME,yCAAqC;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,IAAI,EAAE,OAAvB;AAAgCC,MAAAA,KAAK,EAAE;AAAvC,KANvC;AAOE,6BAAyB;AAP3B,GADC,CADD,CAHqB,CAerB;AACE;;AAEA,WAASC,UAAT,CAAoBD,KAApB,EAA2B;AAAG;AAC5B,QAAIA,KAAJ,EAAW;AACT,aAAOlB,CAAC,CAACH,EAAE,CAACY,UAAJ,EACN;AACEC,QAAAA,aAAa,EAAEC,QADjB;AAC2BC,QAAAA,SAAS,EAAEf,EAAE,CAACY,UAAH,CAAcI,QADpD;AAEEC,QAAAA,QAAQ,EAAE,IAAIjB,EAAE,CAACkB,IAAP,CAAY,CAAZ,EAAe,CAAf,CAFZ;AAE+BK,QAAAA,OAAO,EAAE,IAAIvB,EAAE,CAACkB,IAAP,CAAY,CAAZ,EAAe,CAAf;AAFxC,OADM,CAAR;AAKD,KAND,MAMO;AACL,aAAOf,CAAC,CAACH,EAAE,CAACY,UAAJ,EACN;AACEY,QAAAA,cAAc,EAAE,CADlB;AACqBT,QAAAA,SAAS,EAAEf,EAAE,CAACY,UAAH,CAAcI,QAD9C;AAEEC,QAAAA,QAAQ,EAAE,IAAIjB,EAAE,CAACkB,IAAP,CAAY,CAAZ,EAAe,CAAf,CAFZ;AAE+BK,QAAAA,OAAO,EAAE,IAAIvB,EAAE,CAACkB,IAAP,CAAY,CAAZ,EAAe,CAAf;AAFxC,OADM,CAAR;AAKD;AACF;;AAED,WAASO,YAAT,CAAsBJ,KAAtB,EAA6B;AAAG;AAC9B,WAAOA,KAAK,GAAG,SAAH,GAAe,SAA3B;AACD;;AAED,WAASK,WAAT,CAAqBL,KAArB,EAA4B;AAAG;AAC7B,WAAOA,KAAK,GAAG,sBAAH,GAA4B,sBAAxC;AACD,GAxCkB,CA0CnB;;;AACA,WAASM,cAAT,CAAwBlB,CAAxB,EAA2BmB,GAA3B,EAAgCC,IAAhC,EAAsC;AACpC,QAAI,CAACD,GAAL,EAAU;AACVnB,IAAAA,CAAC,CAACqB,OAAF,GAAY,IAAZ;;AACA,QAAID,IAAJ,EAAU;AACR;AACA;AACA,UAAIE,IAAI,GAAGH,GAAG,CAACtB,OAAJ,CAAY0B,WAAZ,CAAwBC,YAAnC;AACA,UAAIC,GAAG,GAAGH,IAAI,CAACI,YAAL,IAAqBJ,IAAI,CAACK,WAApC,CAJQ,CAI0C;AAClD;;AACA,UAAIR,GAAG,CAACS,aAAJ,CAAkBH,GAAG,CAACI,QAAJ,EAAlB,CAAJ,EAAuC;AACrCV,QAAAA,GAAG,CAACW,aAAJ,GAAoB,IAApB;AACA;AACD;AACF;;AACDX,IAAAA,GAAG,CAACW,aAAJ,GAAoB,KAApB;AACD,GA1DkB,CA4DnB;AACA;AACA;;;AACA,WAAS7B,UAAT,CAAoBD,CAApB,EAAuBmB,GAAvB,EAA4B;AAC1B,QAAIY,EAAE,GAAIZ,GAAG,KAAK,IAAR,GACNA,GAAG,CAACa,UAAJ,CAAeb,GAAG,CAACtB,OAAJ,CAAYoC,SAA3B,EAAsC,IAAtC,CADM,GAENjC,CAAC,CAACH,OAAF,CAAUqC,cAAV,CAAyBC,gBAAzB,CAA0CnC,CAAC,CAACH,OAAF,CAAUoC,SAApD,EAA+D,IAA/D,CAFJ;AAGA,QAAI,CAACF,EAAL,EAAS/B,CAAC,CAACH,OAAF,CAAUuC,WAAV,CAAsBC,QAAtB;AACV;;AAEDC,EAAAA,SAAS,CAACC,aAAV,GACA7C,CAAC,CAACH,EAAE,CAACiD,KAAJ,EAAW,MAAX,EACC;AACEC,IAAAA,UAAU,EAAE,aADd;AAEEC,IAAAA,WAAW,EAAE,IAFf;AAGE;AACAC,IAAAA,cAAc,EAAE,wBAAS3C,CAAT,EAAYmB,GAAZ,EAAiByB,IAAjB,EAAuB;AAAE1B,MAAAA,cAAc,CAAClB,CAAD,EAAImB,GAAJ,EAAS,IAAT,CAAd;AAA+B,KAJ1E;AAKE0B,IAAAA,cAAc,EAAE,wBAAS7C,CAAT,EAAYmB,GAAZ,EAAiB2B,IAAjB,EAAuB;AAAE5B,MAAAA,cAAc,CAAClB,CAAD,EAAImB,GAAJ,EAAS,KAAT,CAAd;AAAgC,KAL3E;AAME4B,IAAAA,uBAAuB,EAAE,IAN3B;AAOE;AACA;AACAhD,IAAAA,SAAS,EAAEE,UATb;AAUE+C,IAAAA,yBAAyB,EAAE,IAV7B;AAUoC;AAClC;AACA9C,IAAAA,MAAM,EAAEW,UAAU,CAAC,KAAD;AAZpB,GADD,EAeC,IAAItB,EAAE,CAAC0D,OAAP,CAAe,QAAf,EAAyB,OAAzB,EAAkCpC,UAAlC,CAfD,EAgBC,IAAItB,EAAE,CAAC0D,OAAP,CAAe,YAAf,EAA6B,eAA7B,EAA8C,UAASC,CAAT,EAAY;AACxD,WAAOA,CAAC,GAAG,mBAAH,GAAyB,aAAjC;AACD,GAFD,EAEGC,QAFH,EAhBD,EAmBCzD,CAAC,CAACH,EAAE,CAAC6D,KAAJ,EAAW,WAAX,EACC;AAAEC,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,MAAM,EAAEtC,YAAY,CAAC,KAAD,CAAlC;AAA2CuC,IAAAA,WAAW,EAAE;AAAxD,GADD,EAEC,IAAIhE,EAAE,CAAC0D,OAAP,CAAe,QAAf,EAAyB,OAAzB,EAAkCjC,YAAlC,CAFD,EAGC,IAAIzB,EAAE,CAAC0D,OAAP,CAAe,QAAf,EAAyB,OAAzB,CAHD,CAnBF,EAuBCvD,CAAC,CAACH,EAAE,CAACiE,KAAJ,EAAW,UAAX,EAAwB;AACvB9D,EAAAA,CAAC,CAACH,EAAE,CAACiE,KAAJ,EAAW,YAAX,EAA0B;AACzB;AAAEC,IAAAA,OAAO,EAAElE,EAAE,CAACI,WAAH,CAAe+D,UAA1B;AAAsCjB,IAAAA,UAAU,EAAEzB,YAAY,CAAC,KAAD;AAA9D,GADD,EAEC,IAAIzB,EAAE,CAAC0D,OAAP,CAAe,YAAf,EAA6B,OAA7B,EAAsCjC,YAAtC,CAFD,EAGC,IAAIzB,EAAE,CAAC0D,OAAP,CAAe,YAAf,EAA6B,OAA7B,CAHD,EAICvD,CAAC,CAAC,wBAAD,EACC;AAAEY,IAAAA,SAAS,EAAEf,EAAE,CAACoE,IAAH,CAAQC,KAArB;AAA4BC,IAAAA,MAAM,EAAE;AAApC,GADD,CAJF,EAMCnE,CAAC,CAACH,EAAE,CAACuE,SAAJ,EACC;AACExD,IAAAA,SAAS,EAAEf,EAAE,CAACoE,IAAH,CAAQI,IADrB;AAEEC,IAAAA,QAAQ,EAAE,IAFZ;AAGEH,IAAAA,MAAM,EAAE,CAHV;AAIEI,IAAAA,IAAI,EAAEhD,WAAW,CAAC,KAAD,CAJnB;AAKEiD,IAAAA,OAAO,EAAE,IALX;AAKkB;AAChBZ,IAAAA,MAAM,EAAE;AANV,GADD,EASC,IAAI/D,EAAE,CAAC0D,OAAP,CAAe,MAAf,EAAuB,OAAvB,EAAgChC,WAAhC,CATD,EAUC,IAAI1B,EAAE,CAAC0D,OAAP,CAAe,MAAf,EAAuB,MAAvB,EAA+BkB,UAA/B,EAVD,CANF,CADF,EAkBK;AACJzE,EAAAA,CAAC,CAACH,EAAE,CAAC6E,WAAJ,EACC;AAAEC,IAAAA,OAAO,EAAE,CAAX;AAAc/D,IAAAA,SAAS,EAAEf,EAAE,CAACoE,IAAH,CAAQW;AAAjC,GADD,CAnBF,CAvBF,CA4CI;AA5CJ,GADD,CAtEmB,CAsHrB;;AACAzE,EAAAA,OAAO,CAAC0E,YAAR,GACE7E,CAAC,CAACH,EAAE,CAACiF,IAAJ,EAAU,MAAV,EAAmB;AAClB,MAAIjF,EAAE,CAAC0D,OAAP,CAAe,UAAf,EAA2B,KAA3B,EAAkC1D,EAAE,CAACkF,KAAH,CAASC,KAA3C,EAAkDP,UAAlD,CAA6D5E,EAAE,CAACkF,KAAH,CAASE,SAAtE,CADD,EAECjF,CAAC,CAACH,EAAE,CAAC6D,KAAJ,EAAW,kBAAX,EACC;AAAEwB,IAAAA,IAAI,EAAE,OAAR;AAAiBvB,IAAAA,IAAI,EAAE,OAAvB;AAAgCE,IAAAA,WAAW,EAAE;AAA7C,GADD,EAEC;AACA,MAAIhE,EAAE,CAAC0D,OAAP,CAAe,MAAf,EAAuB,OAAvB,CAHD,CAFF,EAMCvD,CAAC,CAACH,EAAE,CAACuE,SAAJ,EACC;AAAED,IAAAA,MAAM,EAAE,CAAV;AAAaG,IAAAA,QAAQ,EAAE;AAAvB,GADD,EACiC;AAChC,MAAIzE,EAAE,CAAC0D,OAAP,CAAe,MAAf,EAAuBkB,UAAvB,EAFD,CANF,CADH;AAaA,SAAOtE,OAAP;AACD;AAED;;;;;;AAIA,SAASgF,iBAAT,CAA2BC,OAA3B,EAAoC;AAClCC,EAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,C,CAED;;;AACA,eAAe,SAASC,GAAT,GAAe;AAC5B,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE,oBAAC,YAAD;AACE,IAAA,WAAW,EAAEvF,WADf;AAEE,IAAA,YAAY,EAAC,mBAFf;AAGE,IAAA,aAAa,EAAE,CACb;AAAEwF,MAAAA,GAAG,EAAE,CAAP;AAAUtE,MAAAA,IAAI,EAAE,OAAhB;AAAyBuE,MAAAA,KAAK,EAAE,WAAhC;AAA6CC,MAAAA,GAAG,EAAE;AAAlD,KADa,EAEb;AAAEF,MAAAA,GAAG,EAAE,CAAP;AAAUtE,MAAAA,IAAI,EAAE,MAAhB;AAAwBuE,MAAAA,KAAK,EAAE,QAA/B;AAAyCC,MAAAA,GAAG,EAAE;AAA9C,KAFa,EAGb;AAAEF,MAAAA,GAAG,EAAE,CAAP;AAAUtE,MAAAA,IAAI,EAAE,OAAhB;AAAyBuE,MAAAA,KAAK,EAAE,YAAhC;AAA8CC,MAAAA,GAAG,EAAE;AAAnD,KAHa,EAIb;AAAEF,MAAAA,GAAG,EAAE,CAAP;AAAUtE,MAAAA,IAAI,EAAE,OAAhB;AAAyBuE,MAAAA,KAAK,EAAE,MAAhC;AAAwCC,MAAAA,GAAG,EAAE;AAA7C,KAJa,CAHjB;AASE,IAAA,aAAa,EAAE,CACb;AAAEF,MAAAA,GAAG,EAAE,CAAC,CAAR;AAAWG,MAAAA,IAAI,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KADa,EAEb;AAAEJ,MAAAA,GAAG,EAAE,CAAC,CAAR;AAAWG,MAAAA,IAAI,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KAFa,EAGb;AAAEJ,MAAAA,GAAG,EAAE,CAAC,CAAR;AAAWG,MAAAA,IAAI,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KAHa,EAIb;AAAEJ,MAAAA,GAAG,EAAE,CAAC,CAAR;AAAWG,MAAAA,IAAI,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KAJa,EAKb;AAAEJ,MAAAA,GAAG,EAAE,CAAC,CAAR;AAAWG,MAAAA,IAAI,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KALa,CATjB;AAgBE,IAAA,aAAa,EAAER,iBAhBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,QADF;AAwBD","sourcesContent":["  // App.js\n  import React from 'react';\n\n  import * as go from 'gojs';\n  import { ReactDiagram } from 'gojs-react';\n\n  import 'assets/css/App.css';  // contains .diagram-component CSS\n\n  // ...\n\n  /**\n   * Diagram initialization method, which is passed to the ReactDiagram component.\n   * This method is responsible for making the diagram and initializing the model and any templates.\n   * The model's data should not be set here, as the ReactDiagram component handles that via the other props.\n   */\n  function initDiagram() {\n    const $ = go.GraphObject.make;\n    // set your license key here before creating the diagram: go.Diagram.licenseKey = \"...\";\n    const diagram =\n    $(go.Diagram, \"myDiagramDiv\",\n    {\n      // when a drag-drop occurs in the Diagram's background, make it a top-level node\n      mouseDrop: function(e) { finishDrop(e, null); },\n      layout:  // Diagram has simple horizontal layout\n        $(go.GridLayout,\n          { wrappingWidth: Infinity, alignment: go.GridLayout.Position, cellSize: new go.Size(1, 1) }),\n      \"commandHandler.archetypeGroupData\": { isGroup: true, text: \"Group\", horiz: false },\n      \"undoManager.isEnabled\": true\n    });\n\n    // The one template for Groups can be configured to be either layout out its members\n      // horizontally or vertically, each with a different default color.\n\n      function makeLayout(horiz) {  // a Binding conversion function\n        if (horiz) {\n          return $(go.GridLayout,\n            {\n              wrappingWidth: Infinity, alignment: go.GridLayout.Position,\n              cellSize: new go.Size(1, 1), spacing: new go.Size(4, 4)\n            });\n        } else {\n          return $(go.GridLayout,\n            {\n              wrappingColumn: 1, alignment: go.GridLayout.Position,\n              cellSize: new go.Size(1, 1), spacing: new go.Size(4, 4)\n            });\n        }\n      }\n\n      function defaultColor(horiz) {  // a Binding conversion function\n        return horiz ? \"#FFDD33\" : \"#33D3E5\";\n      }\n\n      function defaultFont(horiz) {  // a Binding conversion function\n        return horiz ? \"bold 18px sans-serif\" : \"bold 16px sans-serif\";\n      }\n\n      // this function is used to highlight a Group that the selection may be dropped into\n      function highlightGroup(e, grp, show) {\n        if (!grp) return;\n        e.handled = true;\n        if (show) {\n          // cannot depend on the grp.diagram.selection in the case of external drag-and-drops;\n          // instead depend on the DraggingTool.draggedParts or .copiedParts\n          var tool = grp.diagram.toolManager.draggingTool;\n          var map = tool.draggedParts || tool.copiedParts;  // this is a Map\n          // now we can check to see if the Group will accept membership of the dragged Parts\n          if (grp.canAddMembers(map.toKeySet())) {\n            grp.isHighlighted = true;\n            return;\n          }\n        }\n        grp.isHighlighted = false;\n      }\n\n      // Upon a drop onto a Group, we try to add the selection as members of the Group.\n      // Upon a drop onto the background, or onto a top-level Node, make selection top-level.\n      // If this is OK, we're done; otherwise we cancel the operation to rollback everything.\n      function finishDrop(e, grp) {\n        var ok = (grp !== null\n          ? grp.addMembers(grp.diagram.selection, true)\n          : e.diagram.commandHandler.addTopLevelParts(e.diagram.selection, true));\n        if (!ok) e.diagram.currentTool.doCancel();\n      }\n\n      myDiagram.groupTemplate =\n      $(go.Group, \"Auto\",\n        {\n          background: \"transparent\",\n          ungroupable: true,\n          // highlight when dragging into the Group\n          mouseDragEnter: function(e, grp, prev) { highlightGroup(e, grp, true); },\n          mouseDragLeave: function(e, grp, next) { highlightGroup(e, grp, false); },\n          computesBoundsAfterDrag: true,\n          // when the selection is dropped into a Group, add the selected Parts into that Group;\n          // if it fails, cancel the tool, rolling back any changes\n          mouseDrop: finishDrop,\n          handlesDragDropForMembers: true,  // don't need to define handlers on member Nodes and Links\n          // Groups containing Groups lay out their members horizontally\n          layout: makeLayout(false)\n        },\n        new go.Binding(\"layout\", \"horiz\", makeLayout),\n        new go.Binding(\"background\", \"isHighlighted\", function(h) {\n          return h ? \"rgba(255,0,0,0.2)\" : \"transparent\";\n        }).ofObject(),\n        $(go.Shape, \"Rectangle\",\n          { fill: null, stroke: defaultColor(false), strokeWidth: 2 },\n          new go.Binding(\"stroke\", \"horiz\", defaultColor),\n          new go.Binding(\"stroke\", \"color\")),\n        $(go.Panel, \"Vertical\",  // title above Placeholder\n          $(go.Panel, \"Horizontal\",  // button next to TextBlock\n            { stretch: go.GraphObject.Horizontal, background: defaultColor(false) },\n            new go.Binding(\"background\", \"horiz\", defaultColor),\n            new go.Binding(\"background\", \"color\"),\n            $(\"SubGraphExpanderButton\",\n              { alignment: go.Spot.Right, margin: 5 }),\n            $(go.TextBlock,\n              {\n                alignment: go.Spot.Left,\n                editable: true,\n                margin: 5,\n                font: defaultFont(false),\n                opacity: 0.75,  // allow some color to show through\n                stroke: \"#404040\"\n              },\n              new go.Binding(\"font\", \"horiz\", defaultFont),\n              new go.Binding(\"text\", \"text\").makeTwoWay())\n          ),  // end Horizontal Panel\n          $(go.Placeholder,\n            { padding: 5, alignment: go.Spot.TopLeft })\n        )  // end Vertical Panel\n      );\n\n    // define a simple Node template\n    diagram.nodeTemplate =\n      $(go.Node, 'Auto',  // the Shape will go around the TextBlock\n        new go.Binding('location', 'loc', go.Point.parse).makeTwoWay(go.Point.stringify),\n        $(go.Shape, 'RoundedRectangle',\n          { name: 'SHAPE', fill: 'white', strokeWidth: 0 },\n          // Shape.fill is bound to Node.data.color\n          new go.Binding('fill', 'color')),\n        $(go.TextBlock,\n          { margin: 8, editable: true },  // some room around the text\n          new go.Binding('text').makeTwoWay()\n        )\n      );\n\n    return diagram;\n  }\n\n  /**\n   * This function handles any changes to the GoJS model.\n   * It is here that you would make any updates to your React state, which is dicussed below.\n   */\n  function handleModelChange(changes) {\n    alert('GoJS model changed!');\n  }\n\n  // render function...\n  export default function App() {\n    return (\n      <div>\n        ...\n        <ReactDiagram\n          initDiagram={initDiagram}\n          divClassName='diagram-component'\n          nodeDataArray={[\n            { key: 0, text: 'Alpha', color: 'lightblue', loc: '0 0' },\n            { key: 1, text: 'Beta', color: 'orange', loc: '150 0' },\n            { key: 2, text: 'Gamma', color: 'lightgreen', loc: '0 150' },\n            { key: 3, text: 'Delta', color: 'pink', loc: '150 150' }\n          ]}\n          linkDataArray={[\n            { key: -1, from: 0, to: 1 },\n            { key: -2, from: 0, to: 2 },\n            { key: -3, from: 1, to: 1 },\n            { key: -4, from: 2, to: 3 },\n            { key: -5, from: 3, to: 0 }\n          ]}\n          onModelChange={handleModelChange}\n        />\n        ...\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}